{
  "openapi" : "3.0.0",
  "servers" : [ {
    "description" : "SwaggerHub API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/ITLandfill/Black-Kiwi/1.0.5"
  }, {
    "description" : "Black-Kiwi  servr",
    "url" : "http://casadiale.noip.me:62950"
  } ],
  "info" : {
    "description" : "API used for the Context Aware System course @ Universit√† degli studi di Bologna a.a. 2021/2022.\nITLandfill group\n",
    "version" : "1.0.5",
    "title" : "Black-Kiwi API",
    "contact" : {
      "email" : "alessandro.benetton@studio.unibo.it",
      "name" : "Alessandro Benetton",
      "url" : "https://github.com/it-landfill/black_kiwi-Backend"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags" : [ {
    "name" : "administration",
    "description" : "VUE frontend for service mantainers"
  }, {
    "name" : "mobile",
    "description" : "iOS application for users"
  } ],
  "paths" : {
    "/login" : {
      "post" : {
        "security" : [ ],
        "summary" : "Authenticate the user",
        "requestBody" : {
          "required" : true,
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "username" : {
                    "type" : "string",
                    "example" : "testUser",
                    "description" : "The username or mail address of the user\n"
                  },
                  "password" : {
                    "type" : "string",
                    "example" : "testUser",
                    "description" : "The user password encoded with [TODO: INSERIRE ALGORITMO\nCRITTOGRAFIA PW]\n"
                  },
                  "role" : {
                    "type" : "integer",
                    "example" : 1,
                    "description" : "The role of the current user (only authenticate if the role is correct)\n"
                  }
                },
                "required" : [ "username", "password" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "authentication succeded",
            "headers" : {
              "Set-Cookie" : {
                "schema" : {
                  "type" : "string",
                  "example" : "sessiontoken=abcdefg; PATH=/; HttpOnly"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LoginSuccess"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request."
          },
          "401" : {
            "description" : "Authorization information is missing or invalid."
          },
          "500" : {
            "description" : "Internal server error."
          }
        }
      }
    },
    "/logout" : {
      "post" : {
        "summary" : "Logout the user",
        "responses" : {
          "200" : {
            "description" : "Logout succeded"
          },
          "400" : {
            "description" : "Bad request."
          },
          "401" : {
            "description" : "Authorization information is missing or invalid."
          },
          "500" : {
            "description" : "Internal server error."
          }
        }
      }
    },
    "/pois" : {
      "get" : {
        "security" : [ ],
        "summary" : "Get all POI",
        "responses" : {
          "200" : {
            "description" : "List of all POI",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/POI_Item"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request."
          },
          "500" : {
            "description" : "Internal server error."
          }
        }
      }
    },
    "/pois/{id}" : {
      "get" : {
        "security" : [ ],
        "summary" : "Get a POI",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "required" : true,
          "description" : "Numeric ID of the POI to get",
          "schema" : {
            "type" : "integer",
            "example" : 0
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Info on a POI",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/POI_Item"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request."
          },
          "500" : {
            "description" : "Internal server error."
          }
        }
      }
    },
    "/mobile/getRecommendation" : {
      "get" : {
        "tags" : [ "mobile" ],
        "summary" : "Request for a list of POI with specified category and minRank",
        "parameters" : [ {
          "in" : "query",
          "name" : "minRank",
          "required" : true,
          "schema" : {
            "type" : "number",
            "format" : "float",
            "example" : 0.2
          }
        }, {
          "in" : "query",
          "name" : "latitude",
          "required" : true,
          "schema" : {
            "type" : "number",
            "format" : "double",
            "example" : 11.343083381652832
          }
        }, {
          "in" : "query",
          "name" : "longitude",
          "required" : true,
          "schema" : {
            "type" : "number",
            "format" : "double",
            "example" : 44.49433189374523
          }
        }, {
          "in" : "query",
          "name" : "category",
          "schema" : {
            "$ref" : "#/components/schemas/Categories"
          }
        }, {
          "in" : "query",
          "name" : "limit",
          "schema" : {
            "type" : "integer",
            "example" : 5
          },
          "description" : "Number of results to return"
        } ],
        "responses" : {
          "200" : {
            "description" : "Query succeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/POI_Item"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request."
          },
          "401" : {
            "description" : "Authorization information is missing or invalid."
          },
          "500" : {
            "description" : "Internal server error."
          }
        }
      }
    },
    "/admin/newPOI" : {
      "post" : {
        "tags" : [ "administration" ],
        "summary" : "Add a POI to the database",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/New_POI_Item"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The generated POI",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "poiID" : {
                      "type" : "integer",
                      "description" : "ID of the new POI."
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request."
          },
          "401" : {
            "description" : "Authorization information is missing or invalid."
          },
          "500" : {
            "description" : "Internal server error."
          }
        }
      }
    },
    "/admin/editPOI" : {
      "post" : {
        "tags" : [ "administration" ],
        "summary" : "Edit a POI in the database.\nNote that all the fields will be overwritten with the submitted ones.\n",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/POI_Item"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The updated POI"
          },
          "400" : {
            "description" : "Bad request."
          },
          "401" : {
            "description" : "Authorization information is missing or invalid."
          },
          "500" : {
            "description" : "Internal server error."
          }
        }
      }
    },
    "/admin/deletePOI" : {
      "delete" : {
        "tags" : [ "administration" ],
        "summary" : "Delete a POI from the database.\n",
        "parameters" : [ {
          "in" : "query",
          "name" : "poiID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "example" : 1
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Operation completed with success"
          },
          "400" : {
            "description" : "Bad request."
          },
          "401" : {
            "description" : "Authorization information is missing or invalid."
          },
          "500" : {
            "description" : "Internal server error."
          }
        }
      }
    },
    "/admin/getPOIQuartieri" : {
      "get" : {
        "summary" : "Return POI distribution based on quartieri.",
        "responses" : {
          "200" : {
            "description" : "Count of the POI divided by quartiere",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/QuartiereInfo"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request."
          },
          "401" : {
            "description" : "Authorization information is missing or invalid."
          },
          "500" : {
            "description" : "Internal server error."
          }
        },
        "tags" : [ "administration" ]
      }
    },
    "/admin/getRequestLocations" : {
      "get" : {
        "summary" : "Return the location of the requests",
        "parameters" : [ {
          "in" : "query",
          "name" : "from",
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "in" : "query",
          "name" : "to",
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of all request locations",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RequestInfo"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request."
          },
          "401" : {
            "description" : "Authorization information is missing or invalid."
          },
          "500" : {
            "description" : "Internal server error."
          }
        },
        "tags" : [ "administration" ]
      }
    },
    "/admin/getRequestQuartieri" : {
      "get" : {
        "summary" : "Return requests distribution based on quartieri.",
        "responses" : {
          "200" : {
            "description" : "Count of all logins divided by quartiere",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/QuartiereInfo"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request."
          },
          "401" : {
            "description" : "Authorization information is missing or invalid."
          },
          "500" : {
            "description" : "Internal server error."
          }
        },
        "tags" : [ "administration" ]
      }
    },
    "/admin/getQuartieri" : {
      "get" : {
        "summary" : "Return quartieri geometry.",
        "responses" : {
          "200" : {
            "description" : "Return the geometry of the city blocks.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/QuartiereInfo"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request."
          },
          "401" : {
            "description" : "Authorization information is missing or invalid."
          },
          "500" : {
            "description" : "Internal server error."
          }
        },
        "tags" : [ "administration" ]
      }
    }
  },
  "components" : {
    "securitySchemes" : {
      "ApiKeyAuth" : {
        "type" : "apiKey",
        "in" : "header",
        "name" : "X-API-KEY"
      }
    },
    "schemas" : {
      "POI_Item" : {
        "type" : "object",
        "required" : [ "id", "name", "category", "rank", "coord" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "example" : 0
          },
          "name" : {
            "type" : "string",
            "example" : "Museo Medievale"
          },
          "category" : {
            "$ref" : "#/components/schemas/Categories"
          },
          "rank" : {
            "type" : "number",
            "format" : "float",
            "example" : 10.2
          },
          "coord" : {
            "$ref" : "#/components/schemas/Coordinates"
          }
        }
      },
      "New_POI_Item" : {
        "type" : "object",
        "required" : [ "name", "category", "coord" ],
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "Museo Medievale"
          },
          "rank" : {
            "type" : "number",
            "format" : "float",
            "example" : 10.2
          },
          "category" : {
            "$ref" : "#/components/schemas/Categories"
          },
          "coord" : {
            "$ref" : "#/components/schemas/Coordinates"
          }
        }
      },
      "Coordinates" : {
        "type" : "object",
        "required" : [ "latitude", "longitude" ],
        "properties" : {
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "example" : 11.343083381652832
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "example" : 44.49433189374523
          }
        }
      },
      "LoginSuccess" : {
        "type" : "object",
        "required" : [ "username", "password" ],
        "properties" : {
          "username" : {
            "type" : "string",
            "example" : "testUser"
          },
          "role" : {
            "type" : "string",
            "enum" : [ "user", "admin" ],
            "example" : "user"
          },
          "token" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "5bd979b4-725c-44e8-a86b-b699174a2e13"
          }
        }
      },
      "RequestInfo" : {
        "type" : "object",
        "required" : [ "name", "category", "coord" ],
        "properties" : {
          "category" : {
            "$ref" : "#/components/schemas/Categories"
          },
          "coord" : {
            "$ref" : "#/components/schemas/Coordinates"
          },
          "minRank" : {
            "type" : "number"
          },
          "timestamp" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "Categories" : {
        "type" : "string",
        "enum" : [ "Department", "Historical Building", "Museum", "Park", "Theater" ],
        "example" : "Department"
      },
      "QuartiereInfo" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "default" : "FeatureCollection",
            "description" : "GeoJson type, will ALWAYS be FeatureCollection\n"
          },
          "features" : {
            "type" : "array",
            "description" : "Each element is a GeoJSON feature, in this project a city block.\n",
            "items" : {
              "type" : "object",
              "properties" : {
                "type" : {
                  "type" : "string",
                  "default" : "Feature",
                  "description" : "GeoJson type, will ALWAYS be Feature\n"
                },
                "properties" : {
                  "type" : "object",
                  "properties" : {
                    "name" : {
                      "type" : "string"
                    },
                    "value" : {
                      "type" : "integer"
                    }
                  }
                },
                "geometry" : {
                  "type" : "object",
                  "properties" : {
                    "type" : {
                      "type" : "string",
                      "description" : "GeoJson type, should be Polygon\n"
                    },
                    "coordinates" : {
                      "type" : "array",
                      "items" : {
                        "type" : "array",
                        "items" : {
                          "type" : "array",
                          "example" : [ 11.343083381652832, 44.49433189374523 ],
                          "items" : {
                            "type" : "number",
                            "format" : "double",
                            "description" : "Two values representing longitude and latitude of a point\n"
                          },
                          "description" : "Each interal array is a couple of coordinates in the format longitude, latitude\n"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "security" : [ {
    "ApiKeyAuth" : [ ]
  } ]
}