openapi: 3.0.0
info:
  title: Black-Kiwi API
  description: |
    API used for the Context Aware System course @ Universit√† degli studi di Bologna a.a. 2021/2022.
    ITLandfill group
  contact:
    name: Alessandro Benetton
    url: https://github.com/it-landfill/black_kiwi-Backend
    email: alessandro.benetton@studio.unibo.it
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/ITLandfill/Black-Kiwi/1.0.0
  description: SwaggerHub API Auto Mocking
tags:
- name: administration
  description: VUE frontend for service mantainers
- name: mobile
  description: iOS application for users
paths:
  /login:
    post:
      summary: Authenticate the user
      parameters:
      - name: username
        in: query
        description: |
          The username or mail address of the user
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: password
        in: query
        description: |
          The user password encoded with [TODO: INSERIRE ALGORITMO
          CRITTOGRAFIA PW]
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: authentication succeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginSuccess'
        "400":
          description: Bad request.
        "401":
          description: Authorization information is missing or invalid.
        "404":
          description: A user with the specified ID was not found.
        "429":
          description: Too Many Requests.
  /POIRecommend:
    get:
      tags:
      - mobile
      summary: Request for a list of POI with specified category and minRank
      parameters:
      - name: category
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Categories'
      - name: minRank
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: number
          example: 0
      - name: limit
        in: query
        description: Number of results to return
        required: false
        style: form
        explode: true
        schema:
          type: number
          example: 5
      - name: latitude
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: "11.343083381652832"
      - name: longitude
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: "44.49433189374523"
      responses:
        "200":
          description: Query succeded
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/POI_Item'
                x-content-type: application/json
        "400":
          description: Bad request.
        "401":
          description: Authorization information is missing or invalid.
        "429":
          description: Too Many Requests.
  /getPOIS:
    get:
      summary: Get all POI
      responses:
        "200":
          description: List of all POI
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/POI_Item'
                x-content-type: application/json
        "400":
          description: Bad request.
        "401":
          description: Authorization information is missing or invalid.
        "429":
          description: Too Many Requests.
  /newPOI:
    post:
      tags:
      - administration
      summary: Add a POI to the database
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/New_POI_Item'
        required: true
      responses:
        "200":
          description: The generated POI
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/POI_Item'
        "400":
          description: Bad request.
        "401":
          description: Authorization information is missing or invalid.
        "429":
          description: Too Many Requests.
  /getRequestLocations:
    get:
      tags:
      - administration
      summary: Return the location of the requests
      parameters:
      - name: from
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: to
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: List of all request locations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RequestInfo'
                x-content-type: application/json
        "400":
          description: Bad request.
        "401":
          description: Authorization information is missing or invalid.
        "429":
          description: Too Many Requests.
components:
  schemas:
    POI_Item:
      required:
      - category
      - coord
      - id
      - name
      - rank
      type: object
      properties:
        id:
          type: integer
          example: 0
        name:
          type: string
          example: Museo Medievale
        category:
          $ref: '#/components/schemas/Categories'
        rank:
          type: number
          example: 10.2
        coord:
          $ref: '#/components/schemas/Coordinates'
      example:
        coord:
          latitude: "11.343083381652832"
          longitude: "44.49433189374523"
        name: Museo Medievale
        rank: 10.2
        id: 0
        category: department
    New_POI_Item:
      required:
      - category
      - coord
      - name
      type: object
      properties:
        name:
          type: string
          example: Museo Medievale
        category:
          $ref: '#/components/schemas/Categories'
        coord:
          $ref: '#/components/schemas/Coordinates'
    Coordinates:
      required:
      - latitude
      - longitude
      type: object
      properties:
        latitude:
          type: string
          example: "11.343083381652832"
        longitude:
          type: string
          example: "44.49433189374523"
      example:
        latitude: "11.343083381652832"
        longitude: "44.49433189374523"
    LoginSuccess:
      required:
      - password
      - username
      type: object
      properties:
        username:
          type: string
          example: MarioRossi
        role:
          type: string
          example: user
          enum:
          - user
          - admin
      example:
        role: user
        username: MarioRossi
    RequestInfo:
      required:
      - category
      - coord
      - name
      type: object
      properties:
        category:
          $ref: '#/components/schemas/Categories'
        coord:
          $ref: '#/components/schemas/Coordinates'
        minRank:
          type: number
        timestamp:
          type: string
          format: date-time
      example:
        coord:
          latitude: "11.343083381652832"
          longitude: "44.49433189374523"
        minRank: 0.80082819046101150206595775671303272247314453125
        category: department
        timestamp: 2000-01-23T04:56:07.000+00:00
    Categories:
      type: string
      example: department
      enum:
      - department
      - historical building
      - museum
      - park
      - theater
